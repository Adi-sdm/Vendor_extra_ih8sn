From 6d745ad1d7791b49b853e4eef3fc800cf049ba91 Mon Sep 17 00:00:00 2001
From: ganeshi4u <ganeshvarmai4u@gmail.com>
Date: Fri, 28 Sep 2018 22:11:35 +0000
Subject: [PATCH 3/7] Inline fingerprint unlock keystore switch into lockscreen
 fragment [2/2]

Converted to aosp PreferenceController in order to be inlined
within Lockscreen Preferences fragment. Preference will be set
to hidden using the method isAvailable() on the bool state of
our custom config.

reference:
https://github.com/AOSPA/android_packages_apps_Settings/commit/047a26b496df3bb68f39b27852e39b73a5fb76a1

android 10.0 arrow-edits:- migrate to androidx, remove the search indexing as its been
 already handled in settingsintelligence

arrow-11.0 edits:
 - Get rid of the redundant custom config. Make use of the FingerprintManager funcs instead.

Change-Id: I46af19970570096aca88d62297aa36ecfbfc0653
Signed-off-by: SamarV-121 <samarvispute121@gmail.com>
---
 res/values/cm_strings.xml                     |  4 ++
 res/xml/security_lockscreen_settings.xml      |  6 ++
 .../FPUnlockKeystorePreferenceController.java | 64 +++++++++++++++++++
 .../security/LockscreenDashboardFragment.java |  3 +-
 4 files changed, 76 insertions(+), 1 deletion(-)
 create mode 100644 src/com/android/settings/security/FPUnlockKeystorePreferenceController.java

diff --git a/res/values/cm_strings.xml b/res/values/cm_strings.xml
index b73d11d..649f91b 100644
--- a/res/values/cm_strings.xml
+++ b/res/values/cm_strings.xml
@@ -162,4 +162,8 @@
     <!-- FastCharge feature -->
     <string name="fast_charging_title">Fast charging</string>
     <string name="fast_charging_summary">Disable to reduce the heat produced by the device while charging or to extend the lifespan of the battery</string>
+
+    <!-- Fingerprint unlock keystore -->
+    <string name="fp_unlock_keystore_title">Fingerprint unlock</string>
+    <string name="fp_unlock_keystore_summary">Unlock device with fingerprint after reboot without PIN/Password/Pattern\nNote: at your own risk!</string>
 </resources>
diff --git a/res/xml/security_lockscreen_settings.xml b/res/xml/security_lockscreen_settings.xml
index f037f5c..3316f3b 100644
--- a/res/xml/security_lockscreen_settings.xml
+++ b/res/xml/security_lockscreen_settings.xml
@@ -110,6 +110,12 @@
             <intent android:action="org.lineageos.settings.device.DOZE_SETTINGS" />
         </lineageos.preference.RemotePreference>
 
+        <SwitchPreference
+            android:key="fp_unlock_keystore"
+            android:title="@string/fp_unlock_keystore_title"
+            android:summary="@string/fp_unlock_keystore_summary"
+            android:defaultValue="false" />
+
     </PreferenceCategory>
 
     <!-- Work profile settings are at the bottom with high order value to avoid users thinking that
diff --git a/src/com/android/settings/security/FPUnlockKeystorePreferenceController.java b/src/com/android/settings/security/FPUnlockKeystorePreferenceController.java
new file mode 100644
index 0000000..d482211
--- /dev/null
+++ b/src/com/android/settings/security/FPUnlockKeystorePreferenceController.java
@@ -0,0 +1,64 @@
+/*
+ * Copyright (C) 2018 ArrowOS
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *      http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.android.settings.security;
+
+import android.content.Context;
+import android.hardware.fingerprint.FingerprintManager;
+import android.provider.Settings;
+import androidx.preference.Preference;
+import androidx.preference.SwitchPreference;
+import com.android.settings.core.PreferenceControllerMixin;
+import com.android.settingslib.core.AbstractPreferenceController;
+
+import static android.provider.Settings.System.FP_UNLOCK_KEYSTORE;
+
+public class FPUnlockKeystorePreferenceController extends AbstractPreferenceController implements
+        PreferenceControllerMixin, Preference.OnPreferenceChangeListener {
+
+    private static final String PREF_FP_UNLOCK_KEYSTORE = "fp_unlock_keystore";
+
+    private FingerprintManager mFingerprintManager;
+
+    public FPUnlockKeystorePreferenceController(Context context) {
+       super(context);
+    }
+
+    @Override
+    public String getPreferenceKey() {
+       return PREF_FP_UNLOCK_KEYSTORE;
+    }
+
+    @Override
+    public void updateState(Preference preference) {
+       int FPKeystoreValue = Settings.System.getInt(mContext.getContentResolver(),
+                FP_UNLOCK_KEYSTORE, 0);
+       ((SwitchPreference) preference).setChecked(FPKeystoreValue != 0);
+    }
+
+   @Override
+    public boolean isAvailable() {
+        mFingerprintManager = (FingerprintManager) mContext.getSystemService(Context.FINGERPRINT_SERVICE);
+        return (mFingerprintManager.isHardwareDetected());
+    }
+
+    @Override
+    public boolean onPreferenceChange(Preference preference, Object newValue) {
+        boolean FPKeystoreValue = (Boolean) newValue;
+        Settings.System.putInt(mContext.getContentResolver(), FP_UNLOCK_KEYSTORE, FPKeystoreValue ? 1 : 0);
+        return true;
+    }
+}
diff --git a/src/com/android/settings/security/LockscreenDashboardFragment.java b/src/com/android/settings/security/LockscreenDashboardFragment.java
index 39355f3..16aa545 100644
--- a/src/com/android/settings/security/LockscreenDashboardFragment.java
+++ b/src/com/android/settings/security/LockscreenDashboardFragment.java
@@ -107,7 +107,7 @@ public class LockscreenDashboardFragment extends DashboardFragment
         controllers.add(notificationController);
         mOwnerInfoPreferenceController = new OwnerInfoPreferenceController(context, this);
         controllers.add(mOwnerInfoPreferenceController);
-
+        controllers.add(new FPUnlockKeystorePreferenceController(context));
         return controllers;
     }
 
@@ -135,6 +135,7 @@ public class LockscreenDashboardFragment extends DashboardFragment
                     controllers.add(new LockScreenNotificationPreferenceController(context));
                     controllers.add(new OwnerInfoPreferenceController(
                             context, null /* fragment */));
+                    controllers.add(new FPUnlockKeystorePreferenceController(context));
                     return controllers;
                 }
 
-- 
2.31.1

